$margin-values: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 auto;
$margin-class-lists: 
	'margin', 'margin-block', 'margin-block-start', 'margin-block-end', 
	'margin-inline', 'margin-inline-start', 'margin-inline-end';

@mixin margin-generator($property, $breakpoint) {
	@each $value in $margin-values {
		@if $value == 'auto' {
			@if $breakpoint =='' {
				.#{$property}-#{$value} {
					#{$property}: auto;
				}
			}
	
			@else {
				.#{$property}-#{$value}--#{$breakpoint} {
					#{$property}: auto;
				}
			}
		}
		
		@else {
			@if $breakpoint =='' {
				.#{$property}-#{$value} {
					#{$property}: calc(var(--margin-base) * #{$value});
				}
			}
	
			@else {
				.#{$property}-#{$value}--#{$breakpoint} {
					#{$property}: calc(var(--margin-base) * #{$value});
				}
			}
		}
	}
}

// Universal.
@each $i in $margin-class-lists {
	@include margin-generator($i, '');
}

// Mobile.
@media (max-width: 768px) {
	@each $i in $margin-class-lists {
		@include margin-generator($i, 'mobile');
	}
}

// Tablet.
@media (max-width: 1024px) {
	@each $i in $margin-class-lists {
		@include margin-generator($i, 'tablet');
	}
}

// Desktop.
@media (min-width: 1024px) {
	@each $i in $margin-class-lists {
		@include margin-generator($i, 'desktop');
	}
}