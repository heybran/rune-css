$padding-values: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25;
$padding-class-lists: 'padding', 'padding-block', 'padding-block-start', 'padding-block-end',
	'padding-inline', 'padding-inline-start', 'padding-inline-end';

@mixin padding-generator($property, $breakpoint) {
	@each $value in $padding-values {
		@if $breakpoint =='' {
			.#{$property}-#{$value} {
				#{$property}: calc(var(--padding-base) * #{$value});
			}
		}

		@else {
			.#{$property}-#{$value}--#{$breakpoint} {
				#{$property}: calc(var(--padding-base) * #{$value});
			}
		}
	}
}

// Universal.
@each $i in $padding-class-lists {
	@include padding-generator($i, '');
}

// Mobile.
@media (max-width: 768px) {
	@each $i in $padding-class-lists {
		@include padding-generator($i, 'mobile');
	}
}

// Tablet.
@media (max-width: 1024px) {
	@each $i in $padding-class-lists {
		@include padding-generator($i, 'tablet');
	}
}

// Desktop.
@media (min-width: 1024px) {
	@each $i in $padding-class-lists {
		@include padding-generator($i, 'desktop');
	}
}